" All system-wide defaults are set in $VIMRUNTIME/debian.vim (usually just
" /usr/share/vim/vimcurrent/debian.vim) and sourced by the call to :runtime
" you can find below.  If you wish to change any of those settings, you should
" do it in this file (/etc/vim/vimrc), since debian.vim will be overwritten
" everytime an upgrade of the vim packages is performed.  It is recommended to
" make changes after sourcing debian.vim since it alters the value of the
" 'compatible' option.

" This line should not be removed as it ensures that various options are
" properly set to work with the Vim-related packages available in Debian.
runtime! debian.vim

" Uncomment the next line to make Vim more Vi-compatible
" NOTE: debian.vim sets 'nocompatible'.  Setting 'compatible' changes numerous
" options, so any other options should be set AFTER setting 'compatible'.
"set compatible

" If using a dark background within the editing area and syntax highlighting
" turn on this option as well
"set background=dark

" Uncomment the following to have Vim jump to the last position when
" reopening a file
"if has("autocmd")
"  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
"endif

" Uncomment the following to have Vim load indentation rules and plugins
" according to the detected filetype.
"if has("autocmd")
"  filetype plugin indent on
"endif

" The following are commented out as they cause vim to behave a lot
" differently from regular Vi. They are highly recommended though.
"set showcmd		" Show (partial) command in status line.
"set showmatch		" Show matching brackets.
"set ignorecase		" Do case insensitive matching
"set smartcase		" Do smart case matching
"set incsearch		" Incremental search
"set autowrite		" Automatically save before commands like :next and :make
"set hidden             " Hide buffers when they are abandoned
"set mouse=a		" Enable mouse usage (all modes)

" Source a global configuration file if available
if filereadable("/etc/vim/vimrc.local")
  source /etc/vim/vimrc.local
endif

syntax on

" Spaces are better than a tab character
set smartindent 
set tabstop=4 
set shiftwidth=4 
set expandtab

" Necesary  for lots of cool vim things
set nocompatible

" Folding Stuffs
set foldmethod=marker

" Needed for Syntax Highlighting and stuff
filetype on
filetype plugin on
syntax enable
set grepprg=grep\ -nH\ $*

" vim-pathoge dependent
execute pathogen#infect()

" Who doesn't like autoindent?
"set autoindent

"cool tab completion stuff
set wildmenu
set wildmode=list:longest,full

" Ignoring case is a fun trick
set ignorecase

" And so is Artificial Intellegence!
set smartcase

" Incremental searching is sexy
set incsearch

" Highlight things that we find with the search
set hlsearch

" Since I use linux, I want this
" let g:clipbrdDefaultReg = '+'

" Line Numbers PWN!
set number

"{{{Latex-Suite vim-latex configuration
" REQUIRED. This makes vim invoke Latex-Suite when you open a tex file.
filetype plugin on

" IMPORTANT: win32 users will need to have 'shellslash' set so that latex
" can be called correctly.
set shellslash

" IMPORTANT: grep will sometimes skip displaying the file name if you
" search in a singe file. This will confuse Latex-Suite. Set your grep
" program to always generate a file-name.
set grepprg=grep\ -nH\ $*

" OPTIONAL: This enables automatic indentation as you type.
" filetype indent on
filetype indent plugin on

" OPTIONAL: Starting with Vim 7, the filetype of empty .tex files defaults to
" 'plaintex' instead of 'tex', which results in vim-latex not being loaded.
" The following changes the default filetype back to 'tex':
let g:tex_flavor='latex'

" default compilation file format target
let g:Tex_DefaultTargetFormat = 'pdf'
let g:Tex_MultipleCompileFormats='pdf, aux'
"}}}


"{{{Taglist configuration
let Tlist_Use_Right_Window = 1
let Tlist_Enable_Fold_Column = 0
let Tlist_Exit_OnlyWindow = 1
let Tlist_Use_SingleClick = 1
let Tlist_Inc_Winwidth = 0
"}}}

set ruler

" Commenting blocks of code.
"     autocmd FileType c,cpp,java,scala let b:comment_leader = '// '
"     autocmd FileType scilab           let b:comment_leader = '// '
"     autocmd FileType sh,ruby,python   let b:comment_leader = '# '
"     autocmd FileType conf,fstab       let b:comment_leader = '# '
"     autocmd FileType tex              let b:comment_leader = '% '
"     autocmd FileType mail             let b:comment_leader = '> '
"     autocmd FileType vim              let b:comment_leader = '" '
"     noremap <silent> cc :<C-B>silent <C-E>s/^/<C-R>=escape(b:comment_leader,'\/')<CR>/<CR>:nohlsearch<CR>
"     noremap <silent> cv :<C-B>silent <C-E>s/^\V<C-R>=escape(b:comment_leader,'\/')<CR>//e<CR>:nohlsearch<CR>
" 


set foldmethod=indent
set foldnestmax=2
nnoremap <space> za
vnoremap <space> zf

nnoremap <C-C> "+yy :echo line("'>") - line("'<") + 1 'line yanked to system clipboard'<CR>
nnoremap YY "+yy :echo line("'>") - line("'<") + 1 'line yanked to system clipboard'<CR>
vnoremap <C-c> "+y :echo line("'>") - line("'<") + 1 'lines yanked to system clipboard'<CR>
vnoremap <C-C> "+yy :echo line("'>") - line("'<") + 1 'line yanked to system clipboard'<CR>
vnoremap Y "+y :echo line("'>") - line("'<") + 1 'lines yanked to system clipboard'<CR>

nnoremap <C-P> "+p :echo line("'>") - line("'<") + 1 'line yanked to system clipboard'<CR>


set modeline

map <F2> ggVG
map! <F2> ggVG
map <F3> ggVGD
map! <F3> ggVGD
map <F4> ggVG"+D
map! <F4> ggVG"+D


" CTRL-A is Select all
" noremap <C-A> gggH<C-O>G
" inoremap <C-A> <C-O>gg<C-O>gH<C-O>G
" cnoremap <C-A> <C-C>gggH<C-O>G
" onoremap <C-A> <C-C>gggH<C-O>G
" snoremap <C-A> <C-C>gggH<C-O>G

map <m-a> :echo 'Current time is ' . strftime('%c')<CR>
map <C-n> :echo 'Current time is ' . strftime('%c')<CR>
map <C-N> :echo 'Current time SHIFT is ' . strftime('%c')<CR>

" set <m-a> = ^[a
" map <m-a> ggVG
" the ^[ is an Esc char that comes before the 'a'
" " In most default configs, ^[a may be typed by pressing first <C-v>, then
" <M-a>


" NERDcommenter to add a space after comment character
let NERDSpaceDelims=1

""""""""""""""""""""""""""""""""""""""""""""
"           tmux functionality             "
"                                          "
""""""""""""""""""""""""""""""""""""""""""""
" set the terminal title to only the document title currently in focus 
" http://stackoverflow.com/questions/15123477/tmux-tabs-with-name-of-file-open-in-vim

"" two lines below are from the original solution 
" autocmd BufEnter * let &titlestring = ' ' . expand("%:t")
" set title

"" the following 4 lines sets the name of current file to tmux panel
autocmd BufEnter * call system("tmux rename-window " . expand("%:t"))
autocmd VimLeave * call system("tmux rename-window bash")
autocmd BufEnter * let &titlestring = ' ' . expand("%:t")                                                                 
set title
""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""

" set mouse options. It is required when using vim in tmux.
" Otherwise tmux scrolls history buffer, not content of file opened in vim
set mouse=a

" navigation remap
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" first, enable status line always
set laststatus=2

" now set it up to change the status line based on mode
if version >= 700
  au InsertEnter * hi StatusLine term=reverse ctermfg=3 ctermbg=8 gui=undercurl guisp=Magenta
  au InsertLeave * hi StatusLine term=reverse ctermfg=0 ctermbg=8 gui=bold,reverse
endif

" Color scheme
colorscheme desert

" If the current buffer has never been saved, it will have no name,
" call the file browser to save it, otherwise just save it.
" source: http://vim.wikia.com/wiki/Map_Ctrl-S_to_save_current_or_new_files
command -nargs=0 -bar Update if &modified 
                           \|    if empty(bufname('%'))
                           \|        browse confirm write
                           \|    else
                           \|        confirm write
                           \|    endif
                           \|endif
nnoremap <silent> <C-S> :<C-u>Update<CR>
inoremap <silent> <C-S> <Esc>:<C-u>Update<CR>

" " Optimal mode 
" nnoremap <silent> hj <Esc>:<C-u>Update<CR>
" nnoremap <silent> jh <Esc>:<C-u>Update<CR>
" inoremap <silent> hj <Esc>:<C-u>Update<CR>
" inoremap <silent> jh <Esc>:<C-u>Update<CR>

" Backspace to remove indent and characters.
" See: http://vi.stackexchange.com/a/2163
set backspace=indent,eol,start
