# reset all bindings
unbind -a

# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key C-a last-window

# Set tmux's default terminal to your shell's default term
# You can get your shell's def term by typing the follownig command
# when outside tmux:
# echo $TERM
#
# This line is essential to font colours. Eg. if it is not set then string color = line number color in vim
set -g default-terminal "xterm"

# set-window-option -g xterm-keys on
# set-option -gw xterm-keys on
# set -g default-terminal "xterm-256color"
# set -g xterm-keys on
# setw -g xterm-keys on


# set scrollback history to 10000 (10k)
set -g history-limit 10000

# scrollback output history buffer with mouse scroll
setw -g mode-mouse on

# set window split
bind-key v split-window -h -c "#{pane_current_path}"
bind-key b split-window -c "#{pane_current_path}"
bind -n C-E split-window -h -c "#{pane_current_path}"
bind -n C-O split-window -c "#{pane_current_path}"

# https://github.com/seebi/tmux-colors-solarized/blob/master/tmuxcolors-256.conf
set-option -g status-bg colour233 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg black # eg: 1:bash* - active program name colour
set-window-option -g window-status-current-bg green
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg green #base01

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange
# clock
set-window-option -g clock-mode-colour green #green


set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left-length 140
set -g status-right-length 140
set -g status-left '#[fg=green]#{pane_current_path}'
# set -g status-left '#[fg=green] #T#[default]'
# set -g status-left '#[fg=green](#S) #(whoami)'
# set -g status-left '#[fg=green]#H #[fg=black]â€¢ #[fg=green,bright]#(uname -r | cut -c 1-6)#[default]'
set -g status-right '#[fg=green,bg=default,bright]#(tmux-mem-cpu-load -i 1) #[fg=white,dim,bg=default]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white,bg=default]%a %l:%M %p#[default] #[fg=blue]%Y_%m_%d'

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key a send-prefix


# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on


# Vi copypaste mode
# setw -g mode-keys vi
set-window-option -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy y copy-pipe 'xclip -in -selection clipboard'
# bind-key -t vi-copy 'y' copy-selection

############################################
#
# PANELS SELECTION (SWITCHING) AND RESIZING
#
############################################

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Use Alt-vim keys without prefix key to switch panes 
bind -n M-h select-pane -L \; display-panes
bind -n M-j select-pane -D \; display-panes
bind -n M-k select-pane -U \; display-panes
bind -n M-l select-pane -R \; display-panes


# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D 

# Resize panes
# bind-key -n M-C-j resize-pane -U 1
# bind-key -n M-C-k resize-pane -D 1
# bind-key -n M-C-h resize-pane -L 1
# bind-key -n M-C-l resize-pane -R 1

bind -n C-K resize-pane -U 1 \; display-panes
bind -n C-J resize-pane -D 1 \; display-panes
bind -n C-H resize-pane -L 1 \; display-panes
bind -n C-L resize-pane -R 1 \; display-panes

bind-key -n M-C-w confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind-key -n C-W confirm-before -p "kill-pane #P? (y/n)" kill-pane

# set to main-horizontal, 60% height for main pane
# bind m set-window-option main-pane-height 60\; select-layout main-horizontal

# set to vim-width
bind m set-window-option main-pane-width 79\; select-layout main-horizontal

bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

############################################
#
# PANELS COLORS
#
############################################

# pane colors
set -g pane-border-fg green
set -g pane-border-bg black
set -g pane-active-border-fg blue
set -g pane-active-border-bg yellow

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# auto window rename
set-window-option -g automatic-rename

# rm mouse mode fail
# set -g mode-mouse off

# color
# set -g default-terminal "xterm-256color"

# status bar
set-option -g status-utf8 on

# https://github.com/edkolev/dots/blob/master/tmux.conf
# Updates for tmux 1.9's current pane splitting paths.
if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind c; bind c new-window -c "#{pane_current_path}"'
if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind s; bind s split-window -v -c "#{pane_current_path}"'
if-shell "[[ `tmux -V` == *1.9* ]]" "unbind '\"'; bind '\"' split-window -v -c '#{pane_current_path}'"
if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind v; bind v split-window -h -c "#{pane_current_path}"'
if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind %; bind % split-window -h -c "#{pane_current_path}"'

# switch panes ctrl+shift+arrows(up/down)
# bind -n S-C-Up select-pane -U
# bind -n S-C-Down select-pane -D
# bind -n S-C-Left select-pane -L
# bind -n S-C-Right select-pane -R

# # THEME
# set -g status-bg black
# set -g status-fg white
# set -g window-status-current-bg white
# set -g window-status-current-fg black
# set -g window-status-current-attr bold
# set -g status-interval 60
# set -g status-left-length 30
# set -g status-left '#[fg=green](#S) #(whoami)'
# set -g status-right '#[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=white]%H:%M#[default]'

############################################
#
# DEFAULT KEYS SECTION
#
############################################

bind-key ? list-keys
bind-key q display-panes
bind-key : command-prompt
bind-key x confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind-key [ copy-mode
bind-key ] paste-buffer
